# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test_cli_aws:
    if: ${{ github.event.pull_request.head.repo.full_name == 'run-x/opta' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Checkout test-service repo
        uses: actions/checkout@v2
        with:
          repository: "run-x/test-service"
          path: "test-service"
          ssh-key: ${{ secrets.SSH_KEY }}
      - name: Setup ssh
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          pip install pipenv
          pipenv install --deploy --dev
          source $(pipenv --venv)/bin/activate
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEPLOYER_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.DEPLOYER_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Pin terraform version
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.15.5
          terraform_wrapper: false
      - name: Test output command
        run: |
          source $(pipenv --venv)/bin/activate
          export PYTHONPATH=$(pwd)
          cd test-service
          python ../opta/cli.py output --env staging
      - name: Test apply command
        run: |
          source $(pipenv --venv)/bin/activate
          export PYTHONPATH=$(pwd)
          cd test-service
          terraform version
          python ../opta/cli.py apply --env staging --test
