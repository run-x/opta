# This workflow creates the environment & service layer from scratch and then destroys them.
# This workflow should be run before each release, to ensure opta's core functionality still works.
name: Test Create and Destroy AWS

on: workflow_dispatch

jobs:
  create-and-destroy-aws:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Pin terraform version
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0
          terraform_wrapper: false
      # This test cannot be run concurrently because it is
      # creating and destroying real resources in the us-east-2 region.
      # Wait for any previous builds of this workflow to finish.
      - name: Limit concurrency to 1.
        uses: softprops/turnstyle@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ALL_GITHUB_TOKEN }}

      - name: Checkout test-service repo
        uses: actions/checkout@v2
        with:
          repository: "run-x/test-service"
          path: "test-service"
          ssh-key: ${{ secrets.SSH_KEY }}
      - name: Setup ssh
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          pip install pipenv
          pipenv install --deploy --dev
          source $(pipenv --venv)/bin/activate
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_OPTA_CI_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_OPTA_CI_SECRET_KEY }}
          aws-region: us-east-1
      - name: Build binary
        run: |
          source $(pipenv --venv)/bin/activate
          export PYTHONPATH=$(pwd)
          make build-binary
      - name: Deploy opta environment
        run: |
          OPTA_DISABLE_REPORTING=true ./dist/opta/opta apply \
          --config ./examples/ci-tests/create-and-destroy-aws/environment.yml \
          --auto-approve \
          --refresh
      - name: Add additional Node Group to Opta Environment.
        run: |
          OPTA_DISABLE_REPORTING=true ./dist/opta/opta apply \
          --config ./examples/ci-tests/create-and-destroy-aws/environment-additional-nodegroup.yml \
          --auto-approve
      - name: Remove additional Node Group from Opta Environment
        run: |
          OPTA_DISABLE_REPORTING=true ./dist/opta/opta apply \
          --config ./examples/ci-tests/create-and-destroy-aws/environment.yml \
          --auto-approve
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build test-service image
        run: docker build -t app:latest -f test-service/Dockerfile test-service/
      - name: Set secret
        run: |
          OPTA_DISABLE_REPORTING=true ./dist/opta/opta secret update \
          --env ci \
          --config ./examples/ci-tests/create-and-destroy-aws/service.yml \
          FAKE_SECRET foo
      - name: Deploy test-service
        run: |
          OPTA_DISABLE_REPORTING=true ./dist/opta/opta deploy \
          --image app:latest \
          --env ci \
          --config ./examples/ci-tests/create-and-destroy-aws/service.yml \
          --tag ${{ github.sha }} \
          --auto-approve
      - name: Deploy test-service with Additional PG
        run: |
          OPTA_DISABLE_REPORTING=true ./dist/opta/opta deploy \
          --image app:latest \
          --env ci \
          --config ./examples/ci-tests/create-and-destroy-aws/service-additional-pg.yml \
          --tag ${{ github.sha }} \
          --auto-approve
      - name: Deploy test-service remove Additional PG
        run: |
          OPTA_DISABLE_REPORTING=true ./dist/opta/opta deploy \
          --image app:latest \
          --env ci \
          --config ./examples/ci-tests/create-and-destroy-aws/service.yml \
          --tag ${{ github.sha }} \
          --auto-approve
      - name: View secret and check value
        run: |
          secret_value=$(OPTA_DISABLE_REPORTING=true ./dist/opta/opta secret view \
          --env ci \
          --config ./examples/ci-tests/create-and-destroy-aws/service.yml \
          FAKE_SECRET | tail -1)
          echo "This was the found secret value: ${secret_value}"
          [[ "$secret_value" =~ .*"foo".* ]] || exit 1
      - name: Destroy environment (and test service)
        run: |
          yes | OPTA_DISABLE_REPORTING=true ./dist/opta/opta destroy \
          --env ci \
          --config ./examples/ci-tests/create-and-destroy-aws/service.yml \
          --auto-approve
          yes | OPTA_DISABLE_REPORTING=true ./dist/opta/opta destroy \
          --config ./examples/ci-tests/create-and-destroy-aws/environment.yml \
          --auto-approve