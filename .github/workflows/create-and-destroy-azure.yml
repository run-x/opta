# This workflow creates the environment & service layer from scratch and then destroys them.
# This workflow should be run before each release, to ensure opta's core functionality still works.
name: Test Create and Destroy Azure

on: workflow_dispatch

jobs:
  create-and-destroy-azure:
    runs-on: ubuntu-18.04
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CI_CD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CI_CD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_CI_CD_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_CI_CD_TENANT_ID }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Pin terraform version
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0
          terraform_wrapper: false
        # This test cannot be run concurrently because it is
        # creating and destroying real resources in a particular azure subscription and region.
        # Wait for any previous builds of this workflow to finish.
      - name: Limit concurrency to 1.
        uses: softprops/turnstyle@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ALL_GITHUB_TOKEN }}
      - name: Checkout runx-infra repo
        uses: actions/checkout@v2
        with:
          repository: "run-x/runx-infra"
          path: "runx-infra"
          ssh-key: ${{ secrets.SSH_KEY }}
      - name: Checkout test-service repo
        uses: actions/checkout@v2
        with:
          repository: "run-x/test-service"
          path: "test-service"
          ssh-key: ${{ secrets.SSH_KEY }}
      - name: Setup ssh
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          pip install pipenv
          pipenv install --deploy --dev
          source $(pipenv --venv)/bin/activate
      - name: Build binary
        run: |
          source $(pipenv --venv)/bin/activate
          export PYTHONPATH=$(pwd)
          make build-binary
      - name: Azure Login
        uses: Azure/login@v1.1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CI_CD_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CI_CD_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_CI_CD_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_CI_CD_TENANT_ID }}"}'
      - name: Deploy opta environment
        run: |
          OPTA_DISABLE_REPORTING=true ./dist/opta/opta apply \
          --config runx-infra/opta-ci/azure.yml \
          --auto-approve \
          --refresh
      - name: Build test-service image
        run: docker build -t app:latest -f test-service/Dockerfile test-service/
      - name: Set secret
        run: |
          OPTA_DISABLE_REPORTING=true ./dist/opta/opta secret update \
          --env azure-release \
          --config test-service/opta-azure.yml \
          FAKE_SECRET foo
      - name: Deploy test-service
        run: |
          OPTA_DISABLE_REPORTING=true ./dist/opta/opta deploy \
          --image app:latest \
          --env azure-release \
          --config test-service/opta-azure.yml \
          --tag ${{ github.sha }} \
          --auto-approve
      - name: View secret and check value
        run: |
          secret_value=$(OPTA_DISABLE_REPORTING=true ./dist/opta/opta secret view \
          --env azure-release \
          --config test-service/opta-azure.yml \
          FAKE_SECRET | tail -1)
          echo "This was the found secret value: ${secret_value}"
          [[ "$secret_value" =~ .*"foo".* ]] || exit 1
      - name: Destroy environment (and test service)
        run: |
          yes | OPTA_DISABLE_REPORTING=true ./dist/opta/opta destroy \
          --env azure-release \
          --config test-service/opta-azure.yml \
          --auto-approve
          yes | OPTA_DISABLE_REPORTING=true ./dist/opta/opta destroy \
          --config runx-infra/opta-ci/azure.yml \
          --auto-approve