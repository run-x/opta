halt: false
environment_module: false
inputs:
  - name: env_name
    user_facing: false
    description: Opta Environment name
    default: None
  - name: layer_name
    user_facing: false
    description: Opta Layer name
    default: None
  - name: module_name
    user_facing: false
    description: Opta Module name
    default: None
  - name: iam_policy
    user_facing: false
    description: IAM Policy
    default: None
  - name: allowed_k8s_services
    user_facing: true
    validator: list(include('allowed-k8s-services'), required=False)
    description: K8s service accounts that this role should have access to.
    default: []
  - name: allowed_iams
    user_facing: true
    validator: list(str(), required=False)
    description: The arns of IAM users/roles allowed to assume this role.
    default: []
  - name: extra_iam_policies
    user_facing: true
    validator: list(str(), required=False)
    description: The arns of additional IAM policies to be attached to this role.
    default: []
  - name: links
    user_facing: true
    validator: list(any(str(), map()), required=False)
    description: The list of links to add permissions for to this role.
    default: []
  - name: kubernetes_trusts
    user_facing: false
    description: |
      The list of structured dicts holding the OID trust data for the role. Should look like:
      type = list(object({
        open_id_url  = string
        open_id_arn  = string
        service_name = string
        namespace    = string
      }))
    default: []
  - name: iam_policy
    user_facing: false
    description: The json string for the IAM policy to grant to the role (crafted by the module processor based on the links)
    default: null
extra_validators:
  allowed-k8s-services:
    service_name: str(required=True)
    namespace: str(required=True)
outputs:
  - name: role_arn
    export: true
    description: The arn of the role just created
output_providers: { }
output_data: { }
clouds:
  - aws