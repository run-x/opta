halt: false
environment_module: false
inputs:
  - name: env_name
    user_facing: false
    description: Opta Environment name
    default: None
  - name: layer_name
    user_facing: false
    description: Opta Layer name
    default: None
  - name: module_name
    user_facing: false
    description: Opta Module name
    default: None
  - name: s3_log_bucket_name
    user_facing: false
    description: Name of the access log bucket
    default: ""
  - name: s3_load_balancer_enabled
    user_facing: false
    description: Create S3 Cloudfront if set to true
    default: false
  - name: load_balancer_arn
    user_facing: false
    description: Arn of the loadbalancer to attach to Load Balancer
    default: ""
  - name: eks_load_balancer_enabled
    user_facing: false
    description: Create LB Cloudfront if set to true
    default: false
  - name: bucket_name
    user_facing: true
    validator: str(required=False)
    description: The name of the s3 bucket to link to this cloudfront distribution
    default: ""
  - name: origin_access_identity_path
    user_facing: true
    validator: str(required=False)
    description: The Cloudfront OAI path to use to access the buckets
    default: ""
  - name: default_page_file
    user_facing: true
    validator: str(required=False)
    description: The name of the existing s3 object in your bucket which will serve as the default page.
    default: "index.html"
  - name: status_404_page_file
    user_facing: true
    validator: str(required=False)
    description: The name of the existing s3 object in your bucket which will serve as the 404 page.
    default: null
  - name: status_500_page_file
    user_facing: true
    validator: str(required=False)
    description: The name of the existing s3 object in your bucket which will serve as the 500 page.
    default: null
  - name: price_class
    user_facing: true
    validator: str(required=False)
    description: The cloudfront price class for this distribution. Can be PriceClass_All, PriceClass_200, or PriceClass_100
    default: PriceClass_200
  - name: acm_cert_arn
    user_facing: true
    validator: str(required=False)
    description: The ACM certificate arn you wish to use to handle ssl (needed if you want https for your site)
    force_update_default_counter: 2
    default: ""
  - name: domains
    user_facing: true
    validator: list(str(), required=False)
    description: The domains which you want your cloudfront distribution to support.
    default: []
  - name: links
    user_facing: true
    validator: list(str(), required=False)
    description: The linked s3 buckets to attach to your cloudfront distribution (currently only supports one).
    default: []
  - name: allowed_methods
    user_facing: true
    validator: list(str(), required=False)
    description: HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin.
    default: ["GET", "HEAD", "OPTIONS"]
  - name: cached_methods
    user_facing: true
    validator: list(str(), required=False)
    description: CloudFront caches the response to the specified HTTP method requests.
    default: ["GET", "HEAD", "OPTIONS"]
  - name: enable_auto_dns
    user_facing: false
    description: Should dns records automatically be added to the hosted zone created within this opta yaml, if present (redundant if domain and zone id are added manually)?
    default: false
  - name: zone_id
    user_facing: true
    validator: str(required=False)
    description: ID of Route53 hosted zone to add a record for. By default uses the one created by the DNS module if the module is found.
    default: ""
  - name: extra_headers
    user_facing: true
    validator: list(str(), required=False)
    description: Extra headers to forward pass cloudfront
    default: []
  - name: web_acl_id
    user_facing: true
    validator: str(required=False)
    description: The ID of the WAF ACL to add to cloudfront
    default: null
extra_validators: { }
outputs:
  - name: cloudfront_domain
    export: true
    description: The domain of the cloudfront distribution
output_providers: { }
output_data: { }
clouds:
  - aws