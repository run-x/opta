{
  "$id": "https://app.runx.dev/modules/local-k8s-service",
  "type": "object",
  "description": "Deploys a kubernetes app",
  "properties": {
    "links": {
      "$ref": "/common-types/links",
      "description": "A list of extra IAM role policies not captured by Opta which you wish to give to your service.",
      "default": []
    },
    "image": {
      "type": "string",
      "description": "Set to AUTO to create a private repo for your own images. Otherwises attempts to pull image from public dockerhub"
    },
    "port": {
      "$ref": "/common-types/port-deprecated",
      "description": "Specifies what port your app was made to be listened to. Currently it must be a map of the form\n`http: [PORT_NUMBER_HERE]` or `tcp: [PORT_NUMBER_HERE]`. Use http if you just have a vanilla http server and tcp for\nwebsockets.\n"
    },
    "min_containers": {
      "type": "integer",
      "description": "The minimum number of replicas your app can autoscale to.",
      "default": 1,
      "minimum": 0
    },
    "max_containers": {
      "type": "integer",
      "description": "The maximum number of replicas your app can autoscale to.",
      "default": 3,
      "minimum": 0
    },
    "autoscaling_target_cpu_percentage": {
      "type": "integer",
      "description": "See the [autoscaling]({{< relref \"#autoscaling\" >}}) section.",
      "default": 80,
      "minimum": 0,
      "maximum": 100
    },
    "autoscaling_target_mem_percentage": {
      "type": "integer",
      "description": "See the [autoscaling]({{< relref \"#autoscaling\" >}}) section.",
      "default": 80,
      "minimum": 0,
      "maximum": 100
    },
    "secrets": {
      "type": "array",
      "description": "A list of secrets to add as environment variables for your container. All secrets must be set following the [secrets instructions](/miscellaneous/secrets) prior to deploying the app.",
      "items": {
        "type": "string"
      },
      "default": []
    },
    "env_vars": {
      "description": "A map of key values to add to the container as environment variables (key is name, value is value).\n```yaml\nenv_vars:\n FLAG: \"true\"\n```\n",
      "$ref": "/common-types/env-vars",
      "default": []
    },
    "healthcheck_path": {
      "type": "string",
      "description": "See the See the [liveness/readiness]({{< relref \"#livenessreadiness-probe\" >}}) section. Default `null` (i.e., no user-specified healthchecks)"
    },
    "liveness_probe_path": {
      "type": "string",
      "description": "Use if liveness probe != readiness probe"
    },
    "readiness_probe_path": {
      "type": "string",
      "description": "Use if liveness probe != readiness probe"
    },
    "initial_liveness_delay": {
      "type": "integer",
      "description": "Use if the initial delay needs to be changed.",
      "default": 30
    },
    "initial_readiness_delay": {
      "type": "integer",
      "description": "Use if the initial delay needs to be changed.",
      "default": 30
    },
    "consistent_hash": {
      "description": "Use [consistent hashing](https://www.nginx.com/resources/wiki/modules/consistent_hash/)",
      "type": "string"
    },
    "sticky_session": {
      "description": "Use [sticky sessions](https://stackoverflow.com/questions/10494431/sticky-and-non-sticky-sessions) via cookies for your service (first request will send you a cookie called opta_cookie which you should add on future requests).",
      "type": "boolean",
      "default": false
    },
    "sticky_session_max_age": {
      "description": "If the sticky session is enabled, how long should the cookie last?",
      "type": "integer",
      "default": 86400
    },
    "resource_request": {
      "description": "See the [container resources]({{< relref \"#container-resources\" >}}) section. Default\n```yaml\ncpu: 100 # in millicores\nmemory: 128 # in megabytes\n```\nCPU is given in millicores, and Memory is in megabytes.\n",
      "type": "object",
      "properties": {
        "cpu": {
          "type": "integer",
          "description": "The number of CPU units to allocate.",
          "default": 100,
          "minimum": 0
        },
        "memory": {
          "type": "integer",
          "description": "The amount of memory to allocate in megabytes.",
          "default": 128,
          "minimum": 0
        }
      },
      "default": {
        "cpu": 100,
        "memory": 128
      }
    },
    "public_uri": {
      "description": "The full domain to expose your app under as well as path prefix. Must be the full parent domain or a subdomain referencing the parent as such: \"dummy.{parent[domain]}/my/path/prefix\"\n",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ],
      "default": []
    },
    "keep_path_prefix": {
      "type": "boolean",
      "description": "Should we keep the prefix path which you set in the public uri when forwarding requests to your service?",
      "default": false
    },
    "persistent_storage": {
      "$ref": "/common-types/persistent-storage"
    },
    "ingress_extra_annotations": {
      "type": "object",
      "description": "These are extra annotations to add to ingress objects\n",
      "default": {}
    },
    "type": {
      "description": "The name of this module",
      "enum": ["local-k8s-service", "k8s-service"],
      "default": "k8s-service",
      "type": "string"
    }
  },
  "required": ["image", "type"],
  "opta_metadata": {
    "module_type": "service",
    "clouds": ["local"],
    "name": "local-k8s-service",
    "display_name": "k8s-service",
    "tags": []
  }
}
