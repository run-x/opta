1. Add migration strategies guides
2. Hire technical writers
3. Extra dependencies on aws cli, kubectl, terraform, etc.. makes it risky because we need to keep track of versions.
4. Cleanup usages of aws cli, just use boto
5. stop using aws cli in update kubeconfig just refence opta and have us do it
6. Find python pip for docker push
7. See about bundling terraform with opta
8. Give link to full binary directly instead of shell script
9. Publish checksum of binary
10. In getting started, show what the opta apply output should look like
11. Overview should be first item not last
12. Document that we send usage logs to our servers, and have a way to opt out of that
13. When taking screenshots, don't do red boxes, use developer tools to modify html to update the sensitive data.
14. Clicking on doc image doesn't zoom
15. Use white text with black border for notes image https://i.imgur.com/Z6NP8zV.png
16. Support multi-file layers

Can you make something universal without common denominator

Can you make something with good defaults, but adjustable to special needs

How are you going to keep clients from leaving once they're grown (i.e. when they need dedicated infrastructure engineers)

Use kubebuilder to generate skeleton for opta agent. Kubebuilder sets up the controller runtime usage. Then throw out the excess.

With my change
python ../runxc/opta/cli.py inspect --env staging > /dev/null 2>&1  0.90s user 0.26s system 22% cpu 5.207 total
python ../runxc/opta/cli.py secret list --env staging > /dev/null 2>&1  2.28s user 0.54s system 27% cpu 10.120 total
python ../runxc/opta/cli.py secret view rds_db_host --env staging > /dev/null  2.32s user 0.55s system 28% cpu 9.943 total
python ../runxc/opta/cli.py logs -s 5 --env staging  2.74s user 0.63s system 28% cpu 11.884 total
python ../runxc/opta/cli.py shell --env staging  2.93s user 0.89s system 23% cpu 16.102 total
python ../runxc/opta/cli.py events -s 5 --env staging  2.73s user 0.61s system 34% cpu 9.639 total
python ../runxc/opta/cli.py configure-kubectl --env staging  1.82s user 0.44s system 32% cpu 7.049 total
python ../runxc/opta/cli.py output --env staging  0.84s user 0.24s system 21% cpu 4.969 total
python ../runxc/opta/cli.py deploy -i app:blah3 --env staging  18.18s user 3.21s system 17% cpu 2:05.06 total

Before:
python ../runxc/opta/cli.py inspect --env staging > /dev/null 2>&1  9.15s user 1.36s system 28% cpu 36.355 total
python ../runxc/opta/cli.py secret list --env staging > /dev/null 2>&1  11.77s user 1.80s system 25% cpu 53.908 total
python ../runxc/opta/cli.py secret view rds_db_host --env staging > /dev/null  12.86s user 1.84s system 29% cpu 50.252 total
python ../runxc/opta/cli.py logs -s 5 --env staging  11.38s user 1.73s system 38% cpu 34.318 total
python ../runxc/opta/cli.py shell --env staging  11.96s user 2.07s system 31% cpu 44.754 total
python ../runxc/opta/cli.py events -s 5 --env staging  11.49s user 1.78s system 29% cpu 44.815 total
python ../runxc/opta/cli.py configure-kubectl --env staging  10.89s user 1.62s system 35% cpu 34.957 total
python ../runxc/opta/cli.py output --env staging  9.46s user 1.40s system 22% cpu 47.972 total
python ../runxc/opta/cli.py deploy -i app:blah4 --env staging  27.35s user 4.49s system 20% cpu 2:34.26 total
data.aws_eks_cluster_auth.k8s
data.terraform_remote_state.parent
module.bucket.aws_s3_bucket.bucket
module.bucket.aws_s3_bucket_public_access_block.block[0]
module.docdb.data.aws_kms_key.main
module.docdb.data.aws_security_group.security_group
module.docdb.aws_docdb_cluster.cluster
module.docdb.aws_docdb_cluster_instance.cluster_instances[0]
module.docdb.random_password.documentdb_auth
module.k8sservice.data.aws_caller_identity.current
module.k8sservice.data.aws_ecr_image.service_image[0]
module.k8sservice.data.aws_iam_policy_document.repo_policy
module.k8sservice.data.aws_iam_policy_document.trust_k8s_openid
module.k8sservice.aws_ecr_lifecycle_policy.repo_policy[0]
module.k8sservice.aws_ecr_repository.repo[0]
module.k8sservice.aws_ecr_repository_policy.repo_policy[0]
module.k8sservice.aws_iam_policy.k8s_service
module.k8sservice.aws_iam_policy_attachment.k8s_service
module.k8sservice.aws_iam_role.k8s_service
module.k8sservice.helm_release.k8s-service
module.rds.data.aws_security_group.security_group
module.rds.aws_rds_cluster.db_cluster
module.rds.aws_rds_cluster_instance.db_instance[0]
module.rds.random_password.pg_password