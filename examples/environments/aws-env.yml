name: live-example-dev
org_name: runx
providers:
  aws:
    region: us-east-1
    account_id: 445935066876
modules:
  - type: base
#  - type: external-ssl-cert
#    domain: "baloney.runx.dev"
#    private_key_file: "./privkey.pem"
#    certificate_body_file: "./cert_body.pem"
#    certificate_chain_file: "./cert_chain.pem"
  - type: dns
    domain: baloney.runx.dev
    delegated: false
  - name: deployeruser
    type: aws-iam-user
    extra_iam_policies:
      - "arn:aws:iam::aws:policy/AdministratorAccess"
  - name: deployerrole
    type: aws-iam-role
    extra_iam_policies:
      - "arn:aws:iam::aws:policy/AdministratorAccess"
    allowed_iams:
      - "${{module.deployeruser.user_arn}}"
  - type: k8s-cluster
    spot_instances: true
    max_nodes: 12
    enable_metrics: true
    node_launch_template:
      user_data: |
        MIME-Version: 1.0
        Content-Type: multipart/mixed; boundary="==MYBOUNDARY=="

        --==MYBOUNDARY==
        Content-Type: text/x-shellscript; charset="us-ascii"

        #!/bin/bash
        if ( lsblk | fgrep -q nvme1n1 ); then
           mkfs.ext4 /dev/nvme1n1
           systemctl stop docker
           mkdir -p /var/lib/docker
           mount /dev/nvme1n1 /var/lib/docker
           chmod 711 /var/lib/docker
           systemctl start docker
        fi
        --==MYBOUNDARY==--
  - type: k8s-base
    admin_arns:
      - "${{module.deployeruser.user_arn}}"
      - "${{module.deployerrole.role_arn}}"
  #- type: datadog
