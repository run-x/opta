environments:
  - name: staging
    path: "../environments/aws-env.yml"
    variables:
      max_containers: 2
name: service-1
modules:
  - name: app
    type: k8s-service
    image: kennethreitz/httpbin
    min_containers: 2
    max_containers: "{vars.max_containers}"
    liveness_probe_path: "/get"
    readiness_probe_path: "/get"
    port:
      http: 80
    env_vars:
      A: B
    public_uri: "subdomain1.{parent.domain}"
    links:
      - s3: ["write"]
      - redis
      - db
      - topic
      - queue
    secrets:
      - API_KEY
      - SECRET_1
  - name: db
    type: aws-postgres
    multi_az: true
  - name: s3
    type: aws-s3
    same_region_replication: true
    bucket_name: "{parent_name}-{layer_name}"
    bucket_policy: {
      "Version": "2012-10-17",
      "Statement": [
        {
          "Sid": "denyInsecureTransport",
          "Effect": "Deny",
          "Principal": "*",
          "Action": "s3:*",
          "Resource": [
              "arn:aws:s3:::{parent_name}-{layer_name}/*",
              "arn:aws:s3:::{parent_name}-{layer_name}"
          ],
          "Condition": {
            "Bool": {
              "aws:SecureTransport": "false"
            }
          }
        }
      ]
    }
  - name: redis
    type: aws-redis
  - name: queue
    type: aws-sqs
  - name: topic
    type: aws-sns
    sqs_subscribers:
      - "${{module.queue.queue_arn}}"
  - name: redishelm
    type: helm-chart
    chart: redis
    chart_version: "15.3.2"
    repository: "https://charts.bitnami.com/bitnami"
    values:
      auth:
        password: "faVBS7bEJW" # This is just an example, nothing is actually stored with this password.
      commonAnnotations:
        blah: "3"
        opta_iteration: "2"
    values_files: ["./blah.yaml"]
