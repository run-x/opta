{{- if ne ((keys .Values.port) | len) 1 }}
  {{- fail "Port must specify either a single tcp port (for websockets) or a single http port" }}
  {{- end }}
  {{- if not ( or (hasKey .Values.port "tcp") ( or (hasKey .Values.port "http") (hasKey .Values.port "grpc"))) }}
  {{- fail "Port must specify either a single tcp port (for websockets) or a single http port" }}
  {{- end }}
  {{- if .Values.deployPods }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "k8s-service.fullname" . }}
  labels:
    tags.datadoghq.com/service: {{ include "k8s-service.serviceName" . }}-{{ include "k8s-service.namespaceName" . }}
    tags.datadoghq.com/version: {{ .Values.version | quote }}
  {{- include "k8s-service.labels" . | nindent 4 }}
  namespace: {{ include "k8s-service.namespaceName" . }}
spec:
  selector:
    matchLabels:
  {{- include "k8s-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "k8s-service.selectorLabels" . | nindent 8 }}
        {{- include "k8s-service.optaLabels" . | nindent 8 }}
        tags.datadoghq.com/service: {{ include "k8s-service.serviceName" . }}-{{ include "k8s-service.namespaceName" . }}
        tags.datadoghq.com/version: {{ .Values.version | quote }}
      annotations:
        {{/* https://linkerd.io/2.9/features/protocol-detection/#configuring-protocol-detection */}}
        config.linkerd.io/skip-outbound-ports: "8126,5432,3306"
        ad.datadoghq.com/linkerd-proxy.check_names: '["linkerd"]'
        ad.datadoghq.com/linkerd-proxy.init_configs: '[{}]'
        ad.datadoghq.com/linkerd-proxy.instances: '[{"prometheus_url": "http://%%host%%:4191/metrics"}]'
    spec:
      serviceAccountName: {{ include "k8s-service.serviceName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image }}"
          imagePullPolicy: Always
          volumeMounts:
            - name: config
              mountPath: "/config"
              readOnly: true
          ports:
            - name: main
              protocol: TCP
              {{- if hasKey .Values.port "http" }}
              containerPort: {{ .Values.port.http }}
              {{- end }}
              {{- if hasKey .Values.port "tcp" }}
              containerPort: {{ .Values.port.tcp }}
              {{- end }}
              {{- if hasKey .Values.port "grpc" }}
              containerPort: {{ .Values.port.grpc }}
          {{- end }}
          env:
            - name: RDS_CA_PATH # This is the path to the public key for the docdb tls
              value: "/config/rds_ca.pem"
            {{ range .Values.envVars }}
            - name: {{ .name | quote }}
              value: {{ .value | quote }}
            {{ end }}
            {{ range $val := .Values.linkSecrets }}
            - name: {{ $val.name | quote }}
              valueFrom:
                secretKeyRef:
                  name: secret
                  key: {{ $val.name | quote }}
            {{ end }}
            {{ range $val := .Values.manualSecrets }}
            - name: {{ $val | quote }}
              valueFrom:
                secretKeyRef:
                  name: manual-secrets
                  key: {{ $val | quote }}
          {{ end }}
          {{/* No probes for grpc at the moment */}}
          {{ if not (hasKey .Values.port "grpc") }}
          livenessProbe:
            initialDelaySeconds: 30
            {{ if hasKey .Values.port "tcp" }}
            tcpSocket:
              port: main
            {{ end }}
            {{- if hasKey .Values.port "http" }}
            httpGet:
              port: main
              path: {{ .Values.livenessProbePath }}
          {{ end }}
          readinessProbe:
            initialDelaySeconds: 30
            periodSeconds: 10
            {{ if hasKey .Values.port "tcp" }}
            tcpSocket:
              port: main
            {{ end }}
            {{- if hasKey .Values.port "http" }}
            httpGet:
              port: main
              path: {{ .Values.readinessProbePath }}
          {{ end }}
          {{ end }}
          resources:
            limits:
            {{- toYaml .Values.containerResourceLimits | nindent 14 }}
            requests:
      {{- toYaml .Values.containerResourceRequests | nindent 14 }}
      volumes:
        - name: config
          configMap:
            name: {{ include "k8s-service.fullname" . }}
            items:
              - key: "rds_ca.pem"
                path: "rds_ca.pem"
  {{- end }}
