backends:
  aws:
    terraform:
      backend:
        s3:
          bucket: "{state_storage}"
          key: "{layer_name}"
          dynamodb_table: "{state_storage}"
          region: "{provider[region]}"

modules:
  aws-base:
    location: aws-base
    halt: true
    variables:
      env_name: str
      layer_name: str
      module_name: str
      total_ipv4_cidr_block: optional
      private_ipv4_cidr_blocks: optional
      public_ipv4_cidr_blocks: optional
    outputs:
      kms_account_key_arn:
        export: true
      kms_account_key_id:
        export: true
      vpc_id:
        export: true
      private_subnet_ids:
        export: true
      public_subnets_ids:
        export: true
    providers:
      data:
        aws_caller_identity:
          provider: {}
        aws_region:
          provider: {}
    inspect:
      aws_kms_key:
        name: KMS Key
        desc: General key used for encryption of infra
        url: https://console.aws.amazon.com/kms/home?region=us-east-1#/kms/keys/{key_id}
      aws_vpc:
        name: VPC
        desc: Like your own local network, but hosted on the cloud.
        url: https://console.aws.amazon.com/vpc/home?region={aws_region}#VpcDetails:VpcId={id}
      aws_subnet.public_subnets:
        name: Public Subnet
        desc: Servers in this subnet can have public IP addresses and direct access to the Internet.
        url: https://console.aws.amazon.com/vpc/home?region={aws_region}#SubnetDetails:subnetId={id}
      aws_subnet.private_subnets:
        name: Private Subnet
        desc: Servers in this subnet do not have direct access to the Internet (must use a proxy).
        url: https://console.aws.amazon.com/vpc/home?region={aws_region}#SubnetDetails:subnetId={id}
  aws-eks:
    location: aws-eks
    halt: true
    variables:
      env_name: str
      layer_name: str
      module_name: str
      max_nodes: optional
      min_nodes: optional
      node_disk_size: optional
      node_instance_type: optional
      k8s_version: optional
      control_plane_security_groups: optional
    outputs:
      k8s_endpoint:
        export: true
      k8s_ca_data:
        export: true
      # This output is used by the configure-kubectl cmd
      k8s_cluster_name:
        export: true
      k8s_openid_provider_url:
        export: true
      k8s_openid_provider_arn:
        export: true
      k8s_node_group_security_id:
        export: true
    inspect:
      aws_eks_cluster:
        name: EKS
        desc: Managed Kubernetes service.
        url: https://console.aws.amazon.com/eks/home?region={aws_region}#/clusters/{name}
    providers:
      data:
        aws_eks_cluster_auth:
          k8s:
            name: "${{{module_source}.k8s_cluster_name}}"
      provider:
        helm:
          kubernetes:
            host: "${{{module_source}.k8s_endpoint}}"
            token: "${{data.aws_eks_cluster_auth.k8s.token}}"
            cluster_ca_certificate: "${{base64decode({module_source}.k8s_ca_data)}}"
  datadog:
    location: datadog
    variables:
      env_name: str
      layer_name: str
      module_name: str
      api_key: optional
  k8s-base:
    location: k8s-base
    variables:
      env_name: str
      layer_name: str
      module_name: str
      openid_provider_url: str
      openid_provider_arn: str
      domain: optional
      cert_arn: optional
    outputs: {}
  k8s-service:
    location: k8s-service
    variables:
      env_name: str
      layer_name: str
      module_name: str
      image: str
      port: optional
      tag: optional
      env_vars: optional
      secrets: optional
      autoscaling_target_cpu_percentage: optional
      autoscaling_target_mem_percentage: optional
      liveness_probe_path: optional
      readiness_probe_path: optional
      container_resource_limits: optional
      container_resource_requests: optional
      public_uri: optional
      domain: optional
      openid_provider_url: str
      openid_provider_arn: str
      iam_policy: optional
      additional_iam_roles: optional
      min_containers: optional
      max_containers: optional
    outputs:
      docker_repo_url:
        export: true
    inspect:
      helm_release.k8s-service:
        name: K8s Service
        desc: Secure and scalable Kubernetes service packaged into a helm chart
        url: https://app.datadoghq.com/apm/service/{k8s-moduleName}-{k8s-layerName}/
  aws-documentdb:
    location: aws-documentdb
    variables:
      env_name: str
      layer_name: str
      module_name: str
      engine_version: optional
      instance_class: optional
    outputs:
      db_user: str
      db_password: str
      db_host: str
    inspect:
      aws_docdb_cluster:
        name: DocDB
        desc: DocumentDB is a NoSQL database that exposes a similar API to MongoDB.
        url: https://console.aws.amazon.com/docdb/home?region={aws_region}#cluster-details/{cluster_identifier}
  aws-db:
    location: aws-db
    variables:
      env_name: str
      layer_name: str
      module_name: str
      engine: optional
      engine_version: optional
      instance_class: optional
    outputs:
      db_user: str
      db_password: str
      db_host: str
      db_name: str
    inspect:
      aws_rds_cluster:
        name: RDS
        desc: |
          Distributed relational database with support for popular SQL engines
          (Postgres, MySQL, SQL Server, ...)
        url: https://console.aws.amazon.com/rds/home?region={aws_region}#database:id={id};is-cluster=true
  aws-redis:
    location: aws-redis
    variables:
      env_name: str
      layer_name: str
      module_name: str
      node_type: optional
      redis_version: optional
    outputs:
      cache_host: str
      cache_auth_token: str
  aws-dns:
    location: aws-dns
    variables:
      env_name: str
      layer_name: str
      module_name: str
      domain: str
      delegated: optional
    outputs:
      zone_id:
        export: true
      name_servers:
        export: true
      domain:
        export: true
  aws-s3:
    location: aws-s3
    variables:
      env_name: str
      layer_name: str
      module_name: str
      bucket_name: str
      block_public: optional
      bucket_policy: optional
    outputs:
      bucket_id:
        export: true
      bucket_arn:
        export: true
    inspect:
      aws_s3_bucket:
        name: S3 Bucket
        desc: Distributed object storage
        url: https://s3.console.aws.amazon.com/s3/buckets/{id}?region={aws_region}&tab=objects
