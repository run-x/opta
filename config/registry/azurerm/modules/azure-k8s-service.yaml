halt: false
environment_module: false
is_unique: true
inputs: # (what users see)
  - name: env_name
    user_facing: false
    description: Opta Environment name
    default: None
  - name: layer_name
    user_facing: false
    description: Opta Layer name
    default: None
  - name: module_name
    user_facing: false
    description: Opta Module name
    default: None
  - name: acr_registry_name
    user_facing: false
    description: The name of the acr registry used by opta for this environment.
    default: false
  - name: tag
    user_facing: false
    description: "Tag of image to be deployed"
    default: null
  - name: digest
    user_facing: false
    description: "Digest of image to be deployed"
    default: null
  - name: link_secrets
    user_facing: false
    description: "Secrets from links"
    default: []
  - name: manual_secrets
    user_facing: false
    description: "Manually set secrets"
    default: [ ]
  - name: image
    user_facing: true
    validator: str(required=True)
    description: Set to AUTO to create a private repo for your own images. Otherwises attempts to pull image from public dockerhub
    default: null
  - name: port
    user_facing: true
    validator: any(include('service_port'), required=False)
    # TODO(patrick): In description, mention deprecation
    description: |
      Specifies what port your app was made to be listened to. Currently it must be a map of the form
      `http: [PORT_NUMBER_HERE]` or `tcp: [PORT_NUMBER_HERE]`. Use http if you just have a vanilla http server and tcp for
      websockets.
  - name: ports
    user_facing: false # TODO(patrick): Will need to flip to true when we add support in this cloud
  - name: probe_port
    user_facing: false # TODO(patrick): Will need to flip to true when we add support in this cloud
  - name: http_port
    user_facing: false
  - name: min_containers
    user_facing: true
    validator: any(required=False)
    description: The minimum number of replicas your app can autoscale to.
    default: 1
  - name: max_containers
    user_facing: true
    validator: any(required=False)
    description: The maximum number of replicas your app can autoscale to.
    default: 3
  - name: autoscaling_target_cpu_percentage
    user_facing: true
    validator: any(str(), int(), required=False)
    description: See the [autoscaling]({{< relref "#autoscaling" >}}) section.
    default: 80
  - name: autoscaling_target_mem_percentage
    user_facing: true
    validator: any(str(), int(), required=False)
    description: See the [autoscaling]({{< relref "#autoscaling" >}}) section.
    default: 80
  - name: secrets
    user_facing: true
    validator: list(str(), required=False)
    description: Optional. A list of secrets to add as environment variables for your container. All secrets must be set following the [secrets instructions](/tutorials/secrets) prior to deploying the app.
    default: []
  - name: env_vars
    user_facing: true
    validator: any(list(include('env-var')), map(str(), str()), required=False)
    description: |
      A map of key values to add to the container as environment variables (key is name, value is value).
      ```yaml
      env_vars:
       FLAG: "true"
      ```
    default: [ ]
  - name: healthcheck_path
    user_facing: true
    validator: str(required=False)
    description: See the See the [liveness/readiness]({{< relref "#livenessreadiness-probe" >}}) section. Default `null` (i.e., no user-specified healthchecks)
    default: null
  - name: liveness_probe_path
    user_facing: true
    validator: str(required=False)
    description: Use if liveness probe != readiness probe
    default: null
  - name: readiness_probe_path
    user_facing: true
    validator: str(required=False)
    description: Use if liveness probe != readiness probe
    default: null
  - name: initial_liveness_delay
    user_facing: true
    validator: int(required=False)
    description: Use if the initial delay needs to be changed.
    default: 30
  - name: initial_readiness_delay
    user_facing: true
    validator: int(required=False)
    description: Use if the initial delay needs to be changed.
    default: 30
  - name: consistent_hash
    user_facing: true
    validator: str(required=False)
    description: Use [consistent hashing](https://www.nginx.com/resources/wiki/modules/consistent_hash/)
    default: null
  - name: sticky_session
    user_facing: true
    validator: bool(required=False)
    description: Use [sticky sessions](https://stackoverflow.com/questions/10494431/sticky-and-non-sticky-sessions) via cookies for your service (first request will send you a cookie called opta_cookie which you should add on future requests).
    default: false
  - name: sticky_session_max_age
    user_facing: true
    validator: int(required=False)
    description: If the sticky session is enabled, how long should the cookie last?
    default: 86400
  - name: resource_request
    user_facing: true
    validator: any(required=False)
    description: |
      See the [container resources]({{< relref "#container-resources" >}}) section. Default
      ```yaml
      cpu: 100 # in millicores
      memory: 128 # in megabytes
      ```
      CPU is given in millicores, and Memory is in megabytes.
    default:
      cpu : 100
      memory : 128
  - name: public_uri
    user_facing: true
    validator: any(str(), list(), required=False)
    description: |
      The full domain to expose your app under as well as path prefix. Must be the full parent domain or a subdomain referencing the parent as such: "dummy.{parent[domain]}/my/path/prefix"
    default: []
  - name: keep_path_prefix
    user_facing: true
    validator: bool(required=False)
    description: Should we keep the prefix path which you set in the public uri when forwarding requests to your service?
    default: false
  - name: links
    user_facing: true
    validator: list(any(str(), map()), required=False)
    description: A list of extra IAM role policies not captured by Opta which you wish to give to your service.
    default: []
  - name: persistent_storage
    user_facing: true
    validator: list(include('persistent_storage'), required=False)
    description: |
      A list persistent storages to add to each instance of your service (need to give a `size` which is the size in GB
      for the storage volume to be, and `path` which is the path in the filesystem of each instance to place it under)
    default: []
extra_validators:
  persistent_storage:
    size: int(required=True)
    path: str(required=True)
  env-var:
    name: str(required=False)
    value: str()
  port_definition:
    name: regex('^[a-z0-9-]+$', name='valid service name')
    type: regex('^(http|tcp)$', name='http or tcp')
    port: int(min=1, max=65535)
    protocol: regex('^(grpc|websocket)$', name='grpc or websocket', required=False)
  service_port:
    http: int(required=False)
    tcp: int(required=False)
    grpc: int(required=False)
outputs:
  - name: docker_repo_url
    export: true
    description: Url to the docker repository created for images to be deployed in this env
output_providers: { }
output_data: { }
