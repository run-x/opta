{
  "$id": "https://app.runx.dev/common-types/k8s-service",
  "type": "object",
  "properties": {
    "image": {
      "type": "string",
      "description": "Set to AUTO to create a private repo for your own images. Otherwises attempts to pull image from public dockerhub"
    },
    "min_containers": {
      "type": "integer",
      "description": "The minimum number of replicas your app can autoscale to.",
      "default": 1,
      "minimum": 0
    },
    "max_containers": {
      "type": "integer",
      "description": "The maximum number of replicas your app can autoscale to.",
      "default": 3,
      "minimum": 0
    },
    "autoscaling_target_cpu_percentage": {
      "type": "integer",
      "description": "The target CPU utilization percentage for autoscaling.",
      "default": 80,
      "minimum": 0,
      "maximum": 100
    },
    "autoscaling_target_mem_percentage": {
      "type": "integer",
      "description": "The target memory utilization percentage for autoscaling.",
      "default": 80,
      "minimum": 0,
      "maximum": 100
    },
    "secrets": {
      "type": "array",
      "description": "A list of secrets to add as environment variables for your container. All secrets must be set following the [secrets instructions](/tutorials/secrets) prior to deploying the app.",
      "items": {
        "type": "string"
      },
      "default": []
    },
    "env_vars": {
      "description": "A map of key values to add to the container as environment variables (key is name, value is value).",
      "$ref": "/common-types/env-vars"
    },
    "healthcheck_path": {
      "type": "string",
      "description": "The path to use for healthchecks.",
      "default": null
    },
    "liveness_probe_path": {
      "type": "string",
      "description": "Use if liveness probe != readiness probe.",
      "default": null
    },
    "readiness_probe_path": {
      "type": "string",
      "description": "Use if liveness probe != readiness probe.",
      "default": null
    },
    "consistent_hash": {
      "description": "Use [consistent hashing](https://www.nginx.com/resources/wiki/modules/consistent_hash/)",
      "type": "string",
      "default": null
    },
    "sticky_session": {
      "description": "Use [sticky sessions](https://stackoverflow.com/questions/10494431/sticky-and-non-sticky-sessions) via cookies for your service (first request will send you a cookie called opta_cookie which you should add on future requests).",
      "type": "boolean",
      "default": false
    },
    "sticky_session_max_age": {
      "description": "The maximum age of the cookie in seconds.",
      "type": "integer",
      "default": 86400
    },
    "resource_request": {
      "description": "The CPU and memory to allocate this container.",
      "type": "object",
      "properties": {
        "cpu": {
          "type": "integer",
          "description": "The number of CPU units to allocate.",
          "default": 100,
          "minimum": 0
        },
        "memory": {
          "type": "integer",
          "description": "The amount of memory to allocate in megabytes.",
          "default": 128,
          "minimum": 0
        }
      },
      "default": {
        "cpu": 100,
        "memory": 128
      }
    },
    "public_uri": {
      "description": "The full domain to expose your app under as well as path prefix. Must be the full parent domain or a subdomain referencing the parent as such: dummy.{parent[domain]}/my/path/prefix",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ],
      "default": []
    },
    "keep_path_prefix": {
      "type": "boolean",
      "description": "Should we keep the prefix path which you set in the public uri when forwarding requests to your service?",
      "default": false
    },
    "links": {
      "$ref": "/common-types/links"
    },
    "persistent_storage": {
      "type": "list",
      "description": "A list persistent storages to add to each instance of your service (need to give a `size` which is the size in GB for the storage volume to be, and `path` which is the path in the filesystem of each instance to place it under)",
      "items": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer"
          },
          "path": {
            "type": "string"
          },
          "required": ["size", "path"]
        }
      }
    },
    "ingress_extra_annotations": {
      "type": "object",
      "description": "These are extra annotations to add to ingress objects.",
      "default": {}
    }
  }
}
