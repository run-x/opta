{
  "$id": "https://app.runx.dev/schemas/aws-eks",
  "description": "Creates an EKS cluster and a default nodegroup to host your applications in",
  "type": "object",
  "properties": {
    "max_nodes": {
      "type": "integer",
      "description": "The maximum number of nodes to be set by the autoscaler in for the default nodegroup.",
      "default": 5
    },
    "min_nodes": {
      "type": "integer",
      "description": "The minimum number of nodes to be set by the autoscaler in for the default nodegroup.",
      "default": 3
    },
    "node_instance_type": {
      "$ref": "/common-types/ec2-instance-type",
      "default": "t3.medium"
    },
    "control_plane_security_groups": {
      "type": "array",
      "description": "The [security groups](https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html) to apply to the control plane.",
      "items": {
        "type": "string"
      }
    },
    "spot_instances": {
      "type": "boolean",
      "description": "A boolean specifying whether to use [spot instances](https://aws.amazon.com/ec2/spot/) for the default nodegroup or not. The spot instances will be configured to have the max price equal to the on-demand price (so no danger of overcharging). _WARNING_: By using spot instances you must accept the real risk of frequent abrupt node terminations and possibly (although extremely rarely) even full blackouts (all nodes die). The former is a small risk as containers of Opta services will be automatically restarted on surviving nodes. So just make sure to specify a minimum of more than 1 containers -- Opta by default attempts to spread them out amongst many nodes. The former is a graver concern which can be addressed by having multiple node groups of different instance types (see aws nodegroup module) and ideally at least one non-spot.",
      "default": false
    },
    "enable_metrics": {
      "type": "boolean",
      "description": "Enable autoscaling group cloudwatch metrics collection for the default nodegroup.",
      "default": false
    },
    "node_launch_template": {
      "type": "object",
      "properties": {
        "user_data": {
          "type": "string",
          "description": "The user data to apply to the nodes. This is a base64 encoded string.",
          "default": ""
        }
      },
      "default": {}
    }
  }
}
