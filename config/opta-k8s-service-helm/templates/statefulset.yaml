{{- if ne (len .Values.persistentStorage) 0 }}
{{- if .Values.deployPods }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "k8s-service.fullname" . }}
  labels:
    tags.datadoghq.com/service: {{ include "k8s-service.serviceName" . }}-{{ include "k8s-service.namespaceName" . }}
    tags.datadoghq.com/version: {{ .Values.version | quote }}
  {{- include "k8s-service.labels" . | nindent 4 }}
  namespace: {{ include "k8s-service.namespaceName" . }}
spec:
  selector:
    matchLabels:
  {{- include "k8s-service.selectorLabels" . | nindent 6 }}
  podManagementPolicy: "Parallel"
  volumeClaimTemplates:
    {{ range $index, $value := .Values.persistentStorage }}
    - metadata:
        name: opta-persistent-{{ $index }}
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ $value.size }}Gi
    {{ end }}
  serviceName: {{ include "k8s-service.serviceName" . }}
  template:
    metadata:
      labels:
        {{- include "k8s-service.selectorLabels" . | nindent 8 }}
        {{- include "k8s-service.optaLabels" . | nindent 8 }}
        tags.datadoghq.com/service: {{ include "k8s-service.serviceName" . }}-{{ include "k8s-service.namespaceName" . }}
        tags.datadoghq.com/version: {{ .Values.version | quote }}
      annotations:
        config.linkerd.io/skip-outbound-ports: "8126,5432,3306"
        linkerd-version: "2.10.2"
        ad.datadoghq.com/linkerd-proxy.check_names: '["linkerd"]'
        ad.datadoghq.com/linkerd-proxy.init_configs: '[{}]'
        ad.datadoghq.com/linkerd-proxy.instances: '[{"prometheus_url": "http://%%host%%:4191/metrics"}]'
    spec:
      serviceAccountName: {{ include "k8s-service.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image }}"
          imagePullPolicy: Always
          volumeMounts:
            - name: config
              mountPath: "/config"
              readOnly: true
          {{ range $index, $value := .Values.persistentStorage }}
            - name: opta-persistent-{{ $index }}
              mountPath: {{ $value.path | quote }}
          {{ end }}
          {{- with .Values.ports }}
          ports:
            {{- range $portSpec := . }}
            - name: {{ $portSpec.name | quote }}
              protocol: TCP
              containerPort: {{ $portSpec.port }}
            {{- end }}
          {{- end }}
          env:
            - name: RDS_CA_PATH # This is the path to the public key for the docdb tls
              value: "/config/rds_ca.pem"
            {{ range .Values.envVars }}
            - name: {{ .name | quote }}
              value: {{ .value | quote }}
            {{ end }}
            {{ range $val := .Values.linkSecrets }}
            - name: {{ $val.name | quote }}
              valueFrom:
                secretKeyRef:
                  name: secret
                  key: {{ $val.name | quote }}
            {{ end }}
            {{ range $val := .Values.manualSecrets }}
            - name: {{ $val | quote }}
              valueFrom:
                secretKeyRef:
                  name: manual-secrets
                  key: {{ $val | quote }}
            {{ end }}
          {{- if .Values.livenessProbePath }}
          livenessProbe:
            initialDelaySeconds: 30
            {{- if eq .Values.probePort "tcp" }}
            tcpSocket:
              port: {{ .Values.probePort.name | quote }}
            {{- else if eq .Values.probePort.probe_type "http" }}
            httpGet:
              port: {{ .Values.probePort.name | quote }}
              path: {{ .Values.livenessProbePath }}
            {{- end }}
          {{- end }}
          {{- if .Values.readinessProbePath }}
          readinessProbe:
            initialDelaySeconds: 30
            periodSeconds: 10
            {{- if eq .Values.probePort "tcp" }}
            tcpSocket:
              port: {{ .Values.probePort.name | quote }}
            {{- else if eq .Values.probePort.probe_type "http" }}
            httpGet:
              port: {{ .Values.probePort.name | quote }}
              path: {{ .Values.livenessProbePath }}
            {{- end }}
          {{- end }}
          resources:
            limits:
              {{- toYaml .Values.containerResourceLimits | nindent 14 }}
            requests:
              {{- toYaml .Values.containerResourceRequests | nindent 14 }}
      volumes:
        - name: config
          configMap:
            name: {{ include "k8s-service.fullname" . }}
            items:
              - key: "rds_ca.pem"
                path: "rds_ca.pem"
{{- end }}
{{- end }}
