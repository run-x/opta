any(include('service-schema'), include('environment-schema'))
---
environment-schema:
  name: str()
  org_name: str()
  providers:
    aws:
      region: str()
      account_id: int()
  modules: list(include('env-module'))
---
service-schema:
  environments: list(include('env'), required=False)
  name: str()
  modules: list(include('service-module'))
env:
  name: str()
  path: str()
  vars: list(map(), required=False)
---
service-module: any(
    include('k8s-service-module'),
    include('aws-rds-module'),
    include('aws-documentdb-module'),
    include('aws-redis-module'),
    include('aws-postgres-module'),
    include('aws-documentdb-module'),
    include('aws-s3-module')
  )
k8s-service-module:
  type: regex('k8s-service')
  name: str(required=False)
  env_name: str(required=False)
  layer_name: str(required=False)
  module_name: str(required=False)
  image: str(required=False)
  port: any(required=False)
  tag: any(required=False)
  env_vars: list(include('env-var'))
  secrets: list(str(), required=False)
  autoscaling_target_cpu_percentage: any(str(), int(), required=False)
  autoscaling_target_mem_percentage: any(str(), int(), required=False)
  liveness_probe_path: str(required=False)
  readiness_probe_path: str(required=False)
  resource_request: any(required=False)
  public_uri: any(required=False)
  domain: any(required=False)
  openid_provider_url: str(required=False)
  openid_provider_arn: str(required=False)
  iam_policy: any(required=False)
  additional_iam_roles: any(required=False)
  min_containers: any(str(), int(), required=False)
  max_containers: any(str(), int(), required=False)
  links: list(any(str(), map()))
aws-rds-module:
  type: regex('aws-rds')
  name: str(required=False)
aws-documentdb-module:
  type: regex('aws-documentdb')
  name: str(required=False)
  env_name: str(required=False)
  layer_name: str(required=False)
  module_name: str(required=False)
  engine_version: any(required=False)
  instance_class: any(required=False)
aws-redis-module:
  type: regex('aws-redis')
  name: str(required=False)
  env_name: str(required=False)
  layer_name: str(required=False)
  module_name: str(required=False)
  node_type: any(required=False)
  redis_version: any(required=False)
aws-postgres-module:
  type: regex('aws-postgres')
  name: str(required=False)
  env_name: str(required=False)
  layer_name: str(required=False)
  module_name: str(required=False)
  engine_version: any(required=False)
  instance_class: any(required=False)
aws-s3-module:
  type: regex('aws-s3')
  name: str(required=False)
  env_name: str(required=False)
  layer_name: str(required=False)
  module_name: str(required=False)
  bucket_name: str(required=False)
  block_public: any(required=False)
  bucket_policy: any(required=False)
---
env-module: any(
    include('aws-base-module'),
    include('aws-dns-module'),
    include('aws-eks-module'),
    include('aws-k8s-base-module'),
    include('datadog-module'),
  )
aws-base-module:
  type: regex('aws-base')
  env_name: str(required=False)
  layer_name: str(required=False)
  module_name: str(required=False)
  total_ipv4_cidr_block: any(required=False)
  private_ipv4_cidr_blocks: any(required=False)
  public_ipv4_cidr_blocks: any(required=False)
aws-dns-module:
  type: regex('aws-dns')
  env_name: str(required=False)
  layer_name: str(required=False)
  module_name: str(required=False)
  domain: str(required=False)
  delegated: any(required=False)
aws-eks-module:
  type: regex('aws-eks')
  env_name: str(required=False)
  layer_name: str(required=False)
  module_name: str(required=False)
  max_nodes: any(str(), int(), required=False)
  min_nodes: any(str(), int(), required=False)
  node_disk_size: any(str(), int(), required=False)
  k8s_version: str(required=False)
  control_plane_security_groups: any(required=False)
aws-k8s-base-module:
  type: regex('k8s-base')
  env_name: str(required=False)
  layer_name: str(required=False)
  module_name: str(required=False)
  openid_provider_url: str(required=False)
  openid_provider_arn: str(required=False)
  high_availability: any(required=False)
  domain: any(required=False)
  cert_arn: any(required=False)
datadog-module:
  type: regex('datadog')
  env_name: str(required=False)
  layer_name: str(required=False)
  module_name: str(required=False)
  api_key: str(required=False)

env-var:
  name: str(required=False)
  value: str()
